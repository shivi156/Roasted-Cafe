@page
@model roasted1.Pages.Checkout.Checkout


@{
    ViewData["Title"] = "Checkout";
    Layout = "~/Pages/Shared/_Layout.cshtml";

}

    <h1 class="display-5">checkout</h1>

<div>
    <img class = "background" alt="background image" src="~/CoffeeImages/coffee3.jpg">
</div>

<form method="post">
    <table class="table">
        <thead>
        <tr class="text-white">
            <th>Name</th>
            <th>Price</th>
            <th>Modify</th>
            <th>Quantity</th>
            <th>Subtotal</th>
        </tr>
        </thead>
        <tbody class="text-white">
        @* The following code is used to check if the number of items in the cart is 0 or more than 0,
        If the number is 0 then the checkout page displays a message saying "Your cart is empty". *@
        @if (Model.Items.Count == 0)
        {
            <p class="msg">Your cart is empty!</p>
        }
        else
        {
            @foreach (var item in Model.Items)
            {
                var subtotal = item.Price * item.Quantity;
                <tr>
                    <td>@item.ItemName</td>
                    <td>@item.Price.ToString("C")</td>
                    <td>
                        <button class="button" type="submit" asp-page-handler="IncrementQuantity" asp-route-itemId="@item.ID">+</button>
                        <button class="button" type="submit" asp-page-handler="DecrementQuantity" asp-route-itemId="@item.ID">-</button>
                        <button class="button" type="submit" asp-page-handler="Delete" asp-route-itemId="@item.ID">Remove</button>
                    </td>
                    <td>@item.Quantity</td>
                    <td>@subtotal.ToString("C")</td>
                </tr>
            }
        }
        </tbody>
    </table>
    

    @* The user will see the 'Buy' button only when they have something in their cart,
        and not when their cart is empty. This will not create confusion.  *@
    
    @if (Model.Items.Count > 0)
    {
        <button class="button1" type="submit" asp-page-handler="Buy">Buy</button>
    }

</form>


@* when the user is logged in and is in the checkout page, the 'Previous button is shown to go back to the menu
if they want to add more items, user authentication is used to access checkout to make a database record for
every user.  *@

@if (User.Identity.IsAuthenticated)
    {
        <a class="button2" asp-page="/Menus/Index"> Previous </a>
    }


        


